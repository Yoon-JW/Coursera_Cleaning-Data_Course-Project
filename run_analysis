library(plyr)

# Step 1
# Merges the training and the test sets to create one data set

# read the data
train_x <- read.table("UCI HAR Dataset/train/X_train.txt")
train_y <- read.table("UCI HAR Dataset/train/y_train.txt")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt")

test_x <- read.table("UCI HAR Dataset/test/X_test.txt")
test_y <- read.table("UCI HAR Dataset/test/y_test.txt")
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt")

# merge data
x <- rbind(train_x, test_x)
y <- rbind(train_y, test_y)
subject <- rbind(subject_train, subject_test)


# Step 2
# Extracts only the measurements on the mean and standard deviation for each measurement.

features <- read.table("UCI HAR Dataset/features.txt")

# get only columns with mean() or std() in their names
mean_std <- grep("-(mean|std)\\(\\)", features[,2])

# subset the intended columns
x <- x[, mean_std]

# correct the column names
names(x) <- features[mean_std, 2]


# Step 3
# Uses descriptive activity names to name the activities in the data set

activities <- read.table("UCI HAR Dataset/activity_labels.txt")

# update values with correct activity names
y[,1] <- activities[y[,1], 2]
names(y) <- "activity"


# Step 4
# Appropriately labels the data set with descriptive variable names

# correct column name
names(subject) <- "subject"

# bind all the data in a single data set
all_data <- cbind(x, y, subject)


# Step 5
# From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject

average_data <- ddply(all_data, .(subject, activity), function(x) colMeans(x[, 1:66]))

write.table(average_data, "average_data.txt", row.name=FALS)

